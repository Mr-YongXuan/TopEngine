{"version":3,"sources":["component/charts.js","component/card.js","index.js"],"names":["LineCharts","props","data","$","ajaxSettings","async","get","this","dataSource","result","myChart","echarts","init","document","getElementById","idName","options","backgroundColor","borderWidth","borderColor","title","text","graphName","x","y","textStyle","color","subtextStyle","fontSize","fontWeight","grid","left","right","top","bottom","show","tooltip","trigger","position","pt","xAxis","axisLabel","splitLine","type","boundaryGap","yAxis","max","other","min","series","symbol","sampling","itemStyle","areaStyle","graphic","LinearGradient","offset","closeAvg","array","len","length","sum","i","toFixed","avg","setOption","id","style","width","height","React","Component","CardBody","className","content","welcome","Title","TotalGraph","handleReload","consoleLog","state","reload","setState","timer","setInterval","clearTimeout","margin","ReactDOM","render"],"mappings":"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","file":"static/js/main.c0d08615.chunk.js","sourcesContent":["import $ from \"jquery\";\nimport {graphic} from \"echarts/lib/export\";\nimport React from 'react';\n\nimport echarts from \"echarts/lib/echarts\";\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/toolbox';\nimport 'echarts/lib/component/dataZoom';\nimport 'echarts/lib/component/axis';\n\n\nfunction avg(array) {\n    let len = array.length;\n    let sp  = 60\n    let sum = 0;\n    for(let i=len-1;i>len-sp;i--){\n        sum +=array[i];\n    }\n    return (100 - sum/sp).toFixed(2);\n}\n\n\nclass LineCharts extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        let data;\n\n        $.ajaxSettings.async = false;\n        $.get(\n            this.props.dataSource,\n            function (result) {\n                data = result[\"gopsutil_data\"]\n            });\n        this.myChart = echarts.init(document.getElementById(this.props.idName));\n        let options = {\n            backgroundColor: \"rgb(30, 35, 50)\",\n            borderWidth:1,\n            borderColor: \"#ddd\",\n            title: {\n                text: this.props.graphName,\n                x: \"center\",\n                y: \"top\",\n                textStyle: {\n                    color: \"#DDD\"\n                },\n                subtextStyle: {\n                    color: \"rgb(45, 200, 131)\",\n                    fontSize: 20,\n                    fontWeight: \"bolder\"\n                }\n            },\n            grid: {\n                left: \"0\",\n                right: \"0\",\n                top: \"60\",\n                bottom: \"0\",\n                show: true,\n                borderWidth: 0\n            },\n            tooltip: {\n                trigger: 'axis',\n                position: function (pt) {\n                    return [pt[0], '10%'];\n                }\n            },\n            xAxis: {\n                axisLabel: {\n                    show: false\n                },\n                splitLine: {\n                    show: false\n                },\n                type: 'category',\n                boundaryGap: false\n            },\n            yAxis: {\n                axisLabel: {\n                    show: false\n                },\n                splitLine: {\n                    show: false\n                },\n                type: 'value',\n                max: this.props.other.max || 100,\n                min: this.props.other.min || 0,\n                boundaryGap: [0, '100%']\n            },\n\n            series: [\n                {\n                    type: 'line',\n                    symbol: 'none',\n                    sampling: 'lttb',\n                    itemStyle: {\n                        color: 'rgb(98, 160, 248)'\n                    },\n                    areaStyle: {\n                        color: new graphic.LinearGradient(0, 0, 0, 1, [{\n                            offset: 0,\n                            color: 'rgb(109, 123, 205)'\n                        }, {\n                            offset: 1,\n                            color: 'rgb(59, 73, 155)'\n                        }])\n                    },\n                    data: data\n                }\n            ]\n        }\n\n        if (!this.props.other.closeAvg) {\n            options.title[\"subtext\"] = (avg(data)) + \"%\"\n        } else {\n            options.title[\"subtext\"] = \"不适用\"\n        }\n\n        this.myChart.setOption(options);\n    }\n\n    render() {\n        return (\n            <div id={ this.props.idName } style={{ width: \"300px\", height: \"200px\" }}></div>\n        );\n    }\n}\n\nexport default LineCharts","import React from 'react';\n\nclass CardBody extends React.Component {\n    render() {\n        return (\n            <div className=\"card mt-3 bg-dark\">\n                    <div className=\"card-body bg-dark text-light\">\n                        {this.props.content}\n                    </div>\n            </div>\n        );\n    }\n}\n\nexport default CardBody;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/bootstrap.min.css';\nimport './css/rsc.css';\nimport './bootstrap-icons.css';\n\nimport LineCharts from \"./component/charts\";\nimport CardBody from \"./component/card\";\nimport {consoleLog} from \"echarts/lib/util/log\";\n\nlet welcome = <div>\n    <h5 className={\"font-zcool1 text-color-title\"}>TopEngine React Demo</h5>\n    <hr/>\n        如果你正在阅读这条消息则说明你正在运行TopEngine的示例程序，首先! 恭喜你已经成功的编译并正确的运行了TopEngine！\n        这是一个动态的示例页面, 没错, 就在你的视线下方, 你可以看到几个折线图, 当他们的绿色指标变成0%的时候, 这说明你的电脑当前的运行环境很不妙!\n</div>\n\nclass Title extends React.Component {\n    render() {\n        return(\n            <div className={\"text-center\"}>\n                <CardBody content={welcome}/>\n            </div>\n        );\n    }\n}\n\n\nclass TotalGraph extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            reload: false\n        }\n    }\n\n    handleReload = () => {\n        consoleLog(this.state.reload)\n        this.state.reload ? this.setState({reload: false}) : this.setState({reload: true})\n    }\n\n    componentDidMount() {\n        this.timer = setInterval(() => this.handleReload(), 5000);\n    }\n\n    componentWillUnmount() {\n        this.timer && clearTimeout(this.timer)\n    }\n\n    render() {\n        return(\n            <div className=\"row g-2 mt-3\">\n                <div className={\"col-sm-3 p-2\"} style={{margin: \"auto\"}}>\n                    <LineCharts idName={\"cpu\"} graphName={\"CPU 资源可用\"} dataSource={\"/platform/monitor/cpu\"} other={{closeAvg: false}}/>\n                </div>\n                <div className={\"col-sm-3 p-2\"} style={{margin: \"auto\"}}>\n                    <LineCharts idName={\"mem\"} graphName={\"DDR 资源可用\"} dataSource={\"/platform/monitor/mem\"} other={{closeAvg: false}}/>\n                </div>\n                <div className={\"col-sm-3 p-2\"} style={{margin: \"auto\"}}>\n                    <LineCharts idName={\"disk\"} graphName={\"HDD 资源可用\"} dataSource={\"/platform/monitor/disk\"} other={{closeAvg: false}}/>\n                </div>\n                <div className={\"col-sm-3 p-2\"} style={{margin: \"auto\"}}>\n                    <LineCharts idName={\"iops\"} graphName={\"DISK IO 资源可用\"} dataSource={\"/platform/monitor/disk_io\"} other={{closeAvg: false}}/>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nReactDOM.render(\n    <Title />,\n    document.getElementById('content')\n);\n\nReactDOM.render(\n    <TotalGraph />,\n    document.getElementById('graph')\n);"],"sourceRoot":""}